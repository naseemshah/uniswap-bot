[{"D:\\Coding\\uniswap-bot\\src\\index.js":"1","D:\\Coding\\uniswap-bot\\src\\App.js":"2","D:\\Coding\\uniswap-bot\\src\\reportWebVitals.js":"3","D:\\Coding\\uniswap-bot\\src\\components\\Login.js":"4","D:\\Coding\\uniswap-bot\\src\\components\\SignUp.js":"5","D:\\Coding\\uniswap-bot\\src\\components\\Dashboard.js":"6","D:\\Coding\\uniswap-bot\\src\\components\\Sidebar.js":"7","D:\\Coding\\uniswap-bot\\src\\components\\AccountSettings.js":"8","D:\\Coding\\uniswap-bot\\src\\context\\auth-context.js":"9"},{"size":500,"mtime":1607522459774,"results":"10","hashOfConfig":"11"},{"size":2087,"mtime":1608066277626,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1607522459774,"results":"13","hashOfConfig":"11"},{"size":2739,"mtime":1608046342824,"results":"14","hashOfConfig":"11"},{"size":3009,"mtime":1608037151724,"results":"15","hashOfConfig":"11"},{"size":13477,"mtime":1608061144178,"results":"16","hashOfConfig":"11"},{"size":1983,"mtime":1608037151722,"results":"17","hashOfConfig":"11"},{"size":12735,"mtime":1608066093045,"results":"18","hashOfConfig":"11"},{"size":190,"mtime":1608037151725,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1e7tafe",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":2,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Coding\\uniswap-bot\\src\\index.js",[],["41","42"],"D:\\Coding\\uniswap-bot\\src\\App.js",[],"D:\\Coding\\uniswap-bot\\src\\reportWebVitals.js",[],"D:\\Coding\\uniswap-bot\\src\\components\\Login.js",["43","44","45"],"import '../App.css';\r\nimport logo from '../logo.svg'\r\nimport {Link} from 'react-router-dom'\r\nimport    {useRef,useState,useEffect,useContext} from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nfunction Login() {\r\n  const context=useContext (AuthContext)\r\n  const userNameEl =  useRef()\r\n  const passwordEl =  useRef()\r\n  const  submitHandler = async event => {\r\n    \r\n    event.preventDefault();\r\n    let requestBody \r\n    let resource=\"\"\r\n   \r\n      \r\n        const username =  userNameEl.current.value;\r\n        const password =  passwordEl.current.value;\r\n\r\n    if (username.trim().length === 0 || password.trim().length === 0) {\r\n      return;\r\n    }\r\n      requestBody = {\r\n         username:username,\r\n         password:password\r\n      };\r\n      resource=\"login\"\r\n \r\n    console.log(`http://localhost:5000/users/${resource}`,requestBody)\r\n\r\n    let response=await fetch(`http://localhost:5000/users/${resource}`,\r\n\r\n    \r\n\r\n     {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    \r\n    if (response.status !== 200 && response.status !== 201) {\r\n    //Handle rejected or error responses  \r\n        return\r\n      }\r\n       \r\n      const resData =await   response.json()\r\n      if (resData.token) {\r\n         context.login(\r\n          resData .token,\r\n          resData.username \r\n        );\r\n      }\r\n    console.log(resData)\r\n \r\n  };\r\n  return (\r\n   <form className=\"login-signup\" onSubmit={submitHandler}>\r\n      <section className=\"login-signup-left-section\">\r\n        <div className=\"login-signup-logo\"><img src={logo} alt=\"logo\"/></div>\r\n        <h1 className=\"login-signup-left-section-title\">Welcome,<br></br>Please Login.</h1>\r\n      </section>\r\n      <section className=\"login-signup-right-section\">\r\n        <div className=\"login-signup-form\">\r\n          <h1 className=\"login-signup-right-section-title\">Login</h1>\r\n          <div className=\"input-row\">\r\n            <label htmlFor=\"username\">User Name</label>\r\n            <input name=\"usernam\" ref={userNameEl} />\r\n          </div>\r\n          <div className=\"input-row\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input name=\"password\" type=\"password\" ref={passwordEl}/>\r\n          </div>\r\n          <button type=\"submit\">Login</button>\r\n          <div className=\"login-signup-prompt\">\r\n            <p>New User?</p>\r\n            <Link to=\"/signup\" className=\"react-router-link-reset\">\r\n                       \r\n \r\n                            <p>Register Here</p>\r\n                         \r\n                    </Link>\r\n          </div>\r\n          \r\n        </div>\r\n      </section>\r\n   </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","D:\\Coding\\uniswap-bot\\src\\components\\SignUp.js",["46","47","48"],"import '../App.css';\r\nimport {Link} from 'react-router-dom'\r\nimport logo from '../logo.svg'\r\nimport    {useRef,useContext} from 'react';\r\nimport AuthContext from '../context/auth-context';\r\nfunction SignUp() {\r\n  const context=useContext (AuthContext)\r\n  const userNameEl =  useRef()\r\n  const passwordEl =  useRef()\r\n  const confirmPasswordEl =  useRef()\r\n  const  submitHandler = async event => {\r\n    \r\n    event.preventDefault();\r\n    let requestBody \r\n    let resource=\"\"\r\n   \r\n      \r\n        const username =  userNameEl.current.value;\r\n        const password =  passwordEl.current.value;\r\n        const confirmPassword=confirmPasswordEl.current.value;\r\n    if (username.trim().length === 0 || password.trim().length === 0 || confirmPassword .trim().length === 0 || (confirmPassword !=password)) {\r\n      return;\r\n    }\r\n      requestBody = {\r\n         username:username,\r\n         password:password\r\n      };\r\n      resource=\"signup\"\r\n \r\n    console.log(`http://localhost:5000/users/${resource}`,requestBody)\r\n\r\n    let response=await fetch(`http://localhost:5000/users/${resource}`,\r\n\r\n    \r\n\r\n     {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    })\r\n    if (response.status !== 200 && response.status !== 201) {\r\n         \r\n        return\r\n      }\r\n       \r\n      const resData =await   response.json()\r\n      if (resData.token) {\r\n         context.login(\r\n          resData .token,\r\n          resData.username \r\n        );\r\n      }\r\n    console.log(resData)\r\n \r\n  };\r\n  return (\r\n   <form className=\"login-signup\" onSubmit={submitHandler}>\r\n      <section className=\"login-signup-left-section\">\r\n        <div className=\"login-signup-logo\"><img src={logo} alt=\"logo\"/></div>\r\n        <h1 className=\"login-signup-left-section-title\">Create your new Account.</h1>\r\n      </section>\r\n      <section className=\"login-signup-right-section\">\r\n        <div className=\"login-signup-form\">\r\n          <h1 className=\"login-signup-right-section-title\">Sign up</h1>\r\n          <div className=\"input-row\">\r\n            <label htmlFor=\"username\">User Name</label>\r\n            <input name=\"username\" ref={userNameEl} />\r\n          </div>\r\n          <div className=\"input-row\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input name=\"password\" type=\"password\" ref={passwordEl}/>\r\n          </div>\r\n          <div className=\"input-row\">\r\n            <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n            <input name=\"confirmPassword\" type=\"password\" ref={confirmPasswordEl}/>\r\n          </div>\r\n          <button type=\"submit\">Sign up</button>\r\n          <div className=\"login-signup-prompt\">\r\n            <p>Not a New User?</p>\r\n            <Link to=\"/login\" className=\"react-router-link-reset\">\r\n                       <p>Login</p>                    \r\n               </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n   </form>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","D:\\Coding\\uniswap-bot\\src\\components\\Dashboard.js",["49","50","51","52","53","54","55"],"D:\\Coding\\uniswap-bot\\src\\components\\Sidebar.js",[],"D:\\Coding\\uniswap-bot\\src\\components\\AccountSettings.js",["56","57","58","59","60"],"D:\\Coding\\uniswap-bot\\src\\context\\auth-context.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":19,"nodeType":"67","messageId":"68","endLine":4,"endColumn":27},{"ruleId":"65","severity":1,"message":"69","line":4,"column":28,"nodeType":"67","messageId":"68","endLine":4,"endColumn":37},{"ruleId":"70","severity":1,"message":"71","line":51,"column":11,"nodeType":"72","messageId":"73","endLine":51,"endColumn":25,"fix":"74"},{"ruleId":"70","severity":1,"message":"75","line":21,"column":73,"nodeType":"72","messageId":"73","endLine":21,"endColumn":94,"fix":"76"},{"ruleId":"77","severity":1,"message":"78","line":21,"column":130,"nodeType":"79","messageId":"80","endLine":21,"endColumn":132},{"ruleId":"70","severity":1,"message":"71","line":51,"column":11,"nodeType":"72","messageId":"73","endLine":51,"endColumn":25,"fix":"81"},{"ruleId":"77","severity":1,"message":"78","line":26,"column":49,"nodeType":"79","messageId":"80","endLine":26,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":30,"column":28,"nodeType":"79","messageId":"80","endLine":30,"endColumn":30},{"ruleId":"65","severity":1,"message":"82","line":116,"column":19,"nodeType":"67","messageId":"68","endLine":116,"endColumn":27},{"ruleId":"65","severity":1,"message":"83","line":162,"column":11,"nodeType":"67","messageId":"68","endLine":162,"endColumn":23},{"ruleId":"65","severity":1,"message":"84","line":215,"column":20,"nodeType":"67","messageId":"68","endLine":215,"endColumn":28},{"ruleId":"85","severity":1,"message":"86","line":282,"column":44,"nodeType":"87","messageId":"88","endLine":282,"endColumn":46},{"ruleId":"85","severity":1,"message":"86","line":327,"column":47,"nodeType":"87","messageId":"88","endLine":327,"endColumn":49},{"ruleId":"89","severity":1,"message":"90","line":93,"column":15,"nodeType":"87","endLine":141,"endColumn":6},{"ruleId":"77","severity":1,"message":"91","line":120,"column":26,"nodeType":"79","messageId":"80","endLine":120,"endColumn":28},{"ruleId":"77","severity":1,"message":"91","line":128,"column":39,"nodeType":"79","messageId":"80","endLine":128,"endColumn":41},{"ruleId":"89","severity":1,"message":"92","line":141,"column":7,"nodeType":"93","endLine":141,"endColumn":9,"suggestions":"94"},{"ruleId":"65","severity":1,"message":"95","line":195,"column":17,"nodeType":"67","messageId":"68","endLine":195,"endColumn":24},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property token.","MemberExpression","unexpectedWhitespace",{"range":"98","text":"99"},"Unexpected whitespace before property trim.",{"range":"100","text":"99"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",{"range":"101","text":"99"},"'resource' is assigned a value but never used.","'handleToggle' is assigned a value but never used.","'resData1' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'context.token'. Either include it or remove the dependency array.","ArrayExpression",["102"],"'resData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[1361,1363],".",[747,749],[1478,1480],{"desc":"103","fix":"104"},"Update the dependencies array to be: [context.token]",{"range":"105","text":"106"},[4837,4839],"[context.token]"]